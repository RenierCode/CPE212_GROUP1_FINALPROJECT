---
- name: Deploy and run Docker container on remote servers
  hosts: all
  become: yes
  tasks:

    - name: Install Python3 and pip3 on Ubuntu
      apt:
        name:
          - python3
          - python3-pip
        state: present
        update_cache: yes
      when: ansible_distribution == "Ubuntu"

    - name: Install Python3 and pip3 on CentOS
      yum:
        name:
          - python3
          - python3-pip
        state: present
      when: ansible_distribution == "CentOS"

    - name: Add Docker repository for Ubuntu
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
      when: ansible_distribution == "Ubuntu"

    - name: Add Docker repository for CentOS
      yum_repository:
        name: docker-ce-stable
        description: Docker CE Stable - $releasever
        baseurl: https://download.docker.com/linux/centos/$releasever/$basearch/stable
        gpgcheck: yes
        gpgkey: https://download.docker.com/linux/centos/gpg
        enabled: yes
      when: ansible_distribution == "CentOS"

    - name: Ensure Docker is installed (Ubuntu)
      apt:
        name: docker.io
        state: present
        update_cache: yes
      when: ansible_distribution == "Ubuntu"

    - name: Remove conflicting Podman Docker package
      yum:
        name: podman-docker
        state: absent
      when: ansible_distribution == "CentOS"

    - name: Add Docker CE repository
      yum_repository:
        name: docker-ce-stable
        description: Docker CE Stable - $releasever
        baseurl: https://download.docker.com/linux/centos/$releasever/$basearch/stable
        gpgcheck: yes
        gpgkey: https://download.docker.com/linux/centos/gpg
        enabled: yes
      when: ansible_distribution == "CentOS"

    - name: Ensure Docker CE is installed
      yum:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
      when: ansible_distribution == "CentOS"

    - name: Start Docker service (Ubuntu)
      service:
        name: docker
        state: started
        enabled: yes
      when: ansible_distribution == "Ubuntu"

    - name: Start Docker service (CentOS)
      service:
        name: docker
        state: started
        enabled: yes
      when: ansible_distribution == "CentOS"

    - name: Check if image is present on the target server
      community.docker.docker_image_info:
        name: buduman/group1final:1.1
      register: docker_image_check
      ignore_errors: yes

    - name: Pull Docker image if not present
      community.docker.docker_image:
        name: buduman/group1final:1.1
        state: latest
      when: docker_image_check.failed

    - name: Deploy Docker container from pulled image
      docker_container:
        name: webapp_container
        image: buduman/group1final:1.1
        state: started
        restart_policy: unless-stopped
        published_ports:
          - "9091:80"
